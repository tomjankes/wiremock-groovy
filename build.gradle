plugins {
    id 'groovy'
    id 'pl.allegro.tech.build.axion-release' version '1.2.3'
    id 'maven'
    id 'signing'
}

sourceCompatibility = 11
targetCompatibility = 11

scmVersion {
    tag {
        prefix = project.name
    }
    versionCreator 'versionWithBranch'
}
project.version = scmVersion.version
project.group = 'com.github.tomjankes'



repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:4.0.11'
    compile 'org.apache.httpcomponents:httpclient:4.5.14'

    testCompile 'org.spockframework:spock-core:2.3-groovy-4.0'
    testCompile 'com.github.tomakehurst:wiremock:2.27.2'
    //for wiremock logging
    testCompile 'ch.qos.logback:logback-classic:1.1.3'
    testCompile 'ch.qos.logback:logback-core:1.1.3'

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext {
    ossrhUsername = project.ext.has('ossrhUsername') ? project.ext.ossrhUsername : ''
    ossrhPassword = project.ext.has('ossrhPassword') ? project.ext.ossrhPassword : ''
}


artifacts {
    archives javadocJar, sourcesJar
}

def isReleaseBuild() {
    !project.version.toString().contains('SNAPSHOT')
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}



uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'WireMock groovy'
                packaging 'jar'
                description 'WireMock api for groovy'
                url 'https://github.com/tomjankes/wiremock-groovy'

                scm {
                    connection 'scm:git:https://github.com/tomjankes/wiremock-groovy.git'
                    developerConnection 'scm:git:https://github.com/tomjankes/wiremock-groovy.git'
                    url 'https://github.com/tomjankes/wiremock-groovy'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'tomjankes'
                        name 'Tomasz Jankowski'
                        email 'jankowski.tomek+ossrh@gmail.com'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
